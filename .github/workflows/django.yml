name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2-binary  # Ensure psycopg2 is installed to use PostgreSQL

    - name: Run migrations
      run: python manage.py migrate

    - name: Create superuser
      env:
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        SUPERUSER_EMAIL: ${{ secrets.SUPERUSER_EMAIL }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
      run: |
        python manage.py migrate
        python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); username='${SUPERUSER_USERNAME}'; email='${SUPERUSER_EMAIL}'; password='${SUPERUSER_PASSWORD}'; user, created = User.objects.get_or_create(username=username, defaults={'email': email, 'is_staff': True, 'is_superuser': True}); user.set_password(password) if created else None; user.save() if created else None; print('Superuser created') if created else print('Superuser already exists');"

    - name: Run tests
      env:
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_PORT: 5432
      run: python manage.py test

